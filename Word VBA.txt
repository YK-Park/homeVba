Word VBA

VBA 코드를 사용하기 위해서는 워드 내의 개발자 도구 탭을 활성화해야 한다. 이를 위해서는 다음 단계를 따라야 한다: 1. 워드를 실행한다. 2. "파일" 탭을 클릭한다. 3. "옵션"을 선택한다. 4. "리본 사용자 지정" 옵션을 클릭한다. 5. "메인 탭에 개발자 도구"를 선택한다. 6. "확인" 버튼을 클릭한다.
출처: https://backtohome.kr/entry/마이크로소프트-워드-VBA-코드-문서-작성-자동화 [귀환포탈:티스토리]



Sub CreateDocumentWithForm()
    ' 새로운 문서를 생성한다.
    Documents.Add

    ' 템플릿 문서에서 양식을 복사한다.
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Copy

    ' 클립보드로부터 양식을 붙여넣는다.
    Selection.PasteAndFormat wdPasteDefault

    ' 필요한 정보를 채워넣는다.
    ' ...

    ' 문서를 저장한다.
    ' ...
End Sub


 


위의 코드는 개발자 도구 탭에서 VBA 에디터를 열고 작성할 수 있다. CreateDocumentWithForm이라는 서브루틴은 새로운 문서를 생성하고, 템플릿 문서에서 양식을 복사하여 붙여넣은 후 필요한 정보를 채워넣고, 문서를 저장하는 역할을 한다.

출처: https://backtohome.kr/entry/마이크로소프트-워드-VBA-코드-문서-작성-자동화 [귀환포탈:티스토리]

이미지 삽입 자동화

아래의 워드 VBA 코드를 사용하여 이미지를 자동으로 삽입할 수 있습니다.
Sub InsertImage()
    Dim imagePath As String
    Dim selectedRange As Range

    ' 이미지 경로 입력
    imagePath = "C:\path\to\image.jpg"

    ' 커서 위치에 이미지 삽입
    Set selectedRange = Selection.Range
    selectedRange.InlineShapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
End Sub
위의 코드는 InsertImage()라는 매크로를 정의하고, 이미지 파일 경로를 imagePath 변수에 저장한 다음, 선택한 범위에 이미지를 삽입하는 역할을 합니다.
출처: https://backtohome.kr/entry/이미지-삽입-자동화를-위한-워드-VBA-코드 [귀환포탈:티스토리]

워드 문서에서 표 만들기

Sub CreateTable()
    Dim tbl As Table
    Dim rng As Range
    Dim i As Integer, j As Integer

    ' 새로운 표를 생성합니다.
    Set rng = Selection.Range
    Set tbl = ActiveDocument.Tables.Add(rng, 3, 3)

    ' 표에 데이터를 입력합니다.
    For i = 1 To tbl.Rows.Count
        For j = 1 To tbl.Columns.Count
            tbl.Cell(i, j).Range.Text = "데이터 " & i & "-" & j
        Next j
    Next i
End Sub
위의 코드는 현재 커서가 위치한 곳에 3x3 크기의 표를 생성하고, 각 셀에 "데이터 i-j" 형식의 텍스트를 입력하는 예시입니다. 이 예시 코드를 실행하면 워드 문서에 표와 데이터가 자동으로 생성됩니다.
Selection.Range: 현재 커서의 위치를 나타내는 Range 객체입니다.
ActiveDocument.Tables.Add: 새로운 표를 생성하는 메소드입니다. 첫 번째 파라미터는 표를 추가할 위치를 나타내는 Range 객체이고, 두 번째와 세 번째 파라미터는 행과 열의 개수입니다.
tbl.Cell(i, j): 특정 셀을 나타내는 Cell 객체입니다. 첫 번째 파라미터는 행 번호이고, 두 번째 파라미터는 열 번호입니다.
tbl.Cell(i, j).Range.Text: 특정 셀에 데이터를 입력하는 속성입니다. 데이터는 텍스트 형식으로 입력됩니다.
출처: https://backtohome.kr/entry/워드-문서에서-표-만들기를-자동화하는-VBA-코드 [귀환포탈:티스토리]

 목차 자동 생성

 Sub CreateToc()
    Dim Toc As TableOfContents
    Dim Doc As Document
    Dim Rng As Range
    Dim TocTitle As Range

    Set Doc = ActiveDocument
    Set Rng = Doc.Range

    ' 목차 삽입 위치로 이동
    Rng.Collapse Direction:=wdCollapseEnd
    Rng.Move unit:=wdParagraph, count:=1
    Rng.InsertParagraphAfter
    Rng.Collapse Direction:=wdCollapseEnd

    ' 목차 제목 설정
    Set TocTitle = Rng
    TocTitle.Style = Doc.Styles("Heading 1")
    TocTitle.InsertAfter "목차"
    TocTitle.InsertParagraphAfter
    TocTitle.Collapse Direction:=wdCollapseEnd

    ' 목차 생성
    Set Toc = Doc.TablesOfContents.Add(Range:=Rng, _
        useheadingstyles:=True, _
        upperheadinglevel:=1, _
        lowerheadinglevel:=3)
    Toc.Update
End Sub
출처: https://backtohome.kr/entry/워드-VBA-코드를-사용한-목차-자동-생성 [귀환포탈:티스토리]

워드 문서 내 특정 텍스트 찾기 및 바꾸기를 자동화하는 VBA 코드
출처: https://backtohome.kr/entry/워드-문서-내-특정-텍스트-찾기-및-바꾸기를-자동화하는-VBA-코드 [귀환포탈:티스토리]

Sub FindAndReplace()
    Dim doc As Document
    Set doc = ActiveDocument

    ' 찾을 텍스트 입력
    Dim findText As String
    findText = InputBox("찾을 텍스트를 입력하세요.")

    ' 바꿀 텍스트 입력
    Dim replaceText As String
    replaceText = InputBox("바꿀 텍스트를 입력하세요.")

    ' 텍스트 찾기 및 바꾸기
    With doc.Content.Find
        .Text = findText
        .Replacement.Text = replaceText
        .Execute Replace:=wdReplaceAll
    End With

    ' 결과 출력
    MsgBox "텍스트 찾기 및 바꾸기가 완료되었습니다."
End Sub
출처: https://backtohome.kr/entry/워드-문서-내-특정-텍스트-찾기-및-바꾸기를-자동화하는-VBA-코드 [귀환포탈:티스토리]

이미지 삽입 자동화
Sub InsertImage()
    Dim imagePath As String
    Dim selectedRange As Range

    ' 이미지 경로 입력
    imagePath = "C:\path\to\image.jpg"

    ' 커서 위치에 이미지 삽입
    Set selectedRange = Selection.Range
    selectedRange.InlineShapes.AddPicture FileName:=imagePath, LinkToFile:=False, SaveWithDocument:=True
End Sub
위의 코드는 InsertImage()라는 매크로를 정의하고, 이미지 파일 경로를 imagePath 변수에 저장한 다음, 선택한 범위에 이미지를 삽입하는 역할을 합니다.
출처: https://backtohome.kr/entry/이미지-삽입-자동화를-위한-워드-VBA-코드 [귀환포탈:티스토리]

표 만들기를 자동화
Sub CreateTable()
    Dim tbl As Table
    Dim rng As Range
    Dim i As Integer, j As Integer

    ' 새로운 표를 생성합니다.
    Set rng = Selection.Range
    Set tbl = ActiveDocument.Tables.Add(rng, 3, 3)

    ' 표에 데이터를 입력합니다.
    For i = 1 To tbl.Rows.Count
        For j = 1 To tbl.Columns.Count
            tbl.Cell(i, j).Range.Text = "데이터 " & i & "-" & j
        Next j
    Next i
End Sub
위의 코드는 현재 커서가 위치한 곳에 3x3 크기의 표를 생성하고, 각 셀에 "데이터 i-j" 형식의 텍스트를 입력하는 예시입니다. 이 예시 코드를 실행하면 워드 문서에 표와 데이터가 자동으로 생성됩니다.
출처: https://backtohome.kr/entry/워드-문서에서-표-만들기를-자동화하는-VBA-코드 [귀환포탈:티스토리]

목차 자동 생성
Sub CreateToc()
    Dim Toc As TableOfContents
    Dim Doc As Document
    Dim Rng As Range
    Dim TocTitle As Range

    Set Doc = ActiveDocument
    Set Rng = Doc.Range

    ' 목차 삽입 위치로 이동
    Rng.Collapse Direction:=wdCollapseEnd
    Rng.Move unit:=wdParagraph, count:=1
    Rng.InsertParagraphAfter
    Rng.Collapse Direction:=wdCollapseEnd

    ' 목차 제목 설정
    Set TocTitle = Rng
    TocTitle.Style = Doc.Styles("Heading 1")
    TocTitle.InsertAfter "목차"
    TocTitle.InsertParagraphAfter
    TocTitle.Collapse Direction:=wdCollapseEnd

    ' 목차 생성
    Set Toc = Doc.TablesOfContents.Add(Range:=Rng, _
        useheadingstyles:=True, _
        upperheadinglevel:=1, _
        lowerheadinglevel:=3)
    Toc.Update
End Sub
출처: https://backtohome.kr/entry/워드-VBA-코드를-사용한-목차-자동-생성 [귀환포탈:티스토리]

문서 병합


문서 병합 자동화를 위해 필요한 코드는 크게 3가지로 나눌 수 있다. 
첫 번째는 '메인 문서'가 저장된 폴더를 선택하는 부분이다.
Dim MainDocFolder As String

MainDocFolder = "C:\Documents\MainFolder\" ' Main document folder path
두 번째는 문서를 병합할 '데이터 파일'이 저장된 폴더를 선택하는 부분이다.
Dim DataFolder As String

DataFolder = "C:\Documents\DataFolder\" ' Data file folder path
세 번째는 병합된 문서가 저장될 '결과 폴더'를 선택하는 부분이다.
Dim ResultFolder As String

ResultFolder = "C:\Documents\ResultFolder\" ' Result folder path
이제 문서 병합을 자동화하기 위한 실제 코드를 작성해보자. 
아래의 코드는 '메인 문서'에 있는 특정 키워드를 탐색하여 해당 문서를 '데이터 파일'에서 가져온 데이터로 채우고,
 '결과 폴더'에 저장하는 예시이다.

Sub DocumentMergeAutomation()
    Dim MainDocFolder As String
    Dim DataFolder As String
    Dim ResultFolder As String
    Dim MainDoc As Document, DataDoc As Document

    MainDocFolder = "C:\Documents\MainFolder\"
    DataFolder = "C:\Documents\DataFolder\"
    ResultFolder = "C:\Documents\ResultFolder\"

    Set MainDoc = Documents.Open(MainDocFolder & "MainDocument.docx") ' Open the main document

    ' Find specific keyword within the main document
    For Each r In MainDoc.Range.Words
        If r.Text = "Keyword" Then
            ' Open the data file
            Set DataDoc = Documents.Open(DataFolder & "DataFile.docx")

            ' Insert data into the main document
            MainDoc.Bookmarks("Bookmark_Name").Range.Text = DataDoc.Content.Text

            ' Save the merged document to the result folder
            MainDoc.SaveAs2 ResultFolder & "ResultDocument_" & r.Information(wdActiveEndAdjustedPageNumber)

            DataDoc.Close ' Close the data file
        End If
    Next r

    MainDoc.Close ' Close the main document
End Sub

3. VBA 코드 실행하기
VBA 코드를 작성하고 나면, 해당 코드를 실행하여 문서 병합을 자동화할 수 있다. 
아래는 VBA 코드를 실행하는 방법이다.

워드를 실행하고, '개발자' 탭으로 이동한다. (탭이 보이지 않을 경우, 옵션에서 '개발자 탭 표시' 체크)
'새로운 마크로 기록' 버튼을 클릭한다.
' 매크로 기록 중' 팝업 창이 나오면, 마크로를 저장할 장소를 선택한다.
'잠재적인 위험성이 있는 내용 데이터 포함'이라는 옵션을 선택한다.
키보드 및 마우스 조작으로 문서 병합을 진행하면, 해당 작업이 기록된다.
기록을 멈추고, '개발자' 탭에서 '매크로'를 클릭한다.
'문서병합자동화'를 선택하고, '실행' 버튼을 클릭하여 VBA 코드를 실행한다.
출처: https://backtohome.kr/entry/워드-VBA-코드를-활용한-문서-병합-자동화 [귀환포탈:티스토리]




Sub DocumentMergeAutomation()
    Dim MainDocFolder As String
    Dim DataFolder As String
    Dim ResultFolder As String
    Dim MainDoc As Document, DataDoc As Document
    Dim SearchRange As Range
    Dim DataContent As String
    Dim i As Long

    MainDocFolder = "C:\Users\parky\Documents\MainFolder\\"
    DataFolder = "C:\Users\parky\Documents\DataFolder\"
    ResultFolder = "C:\Users\parky\Documents\ResultFolder\"

    ' メイン文書を開く
    Set MainDoc = Documents.Open(MainDocFolder & "MainDocument.docx")

    ' データファイルを開いて内容を読み込み、すぐに閉じる
    Set DataDoc = Documents.Open(DataFolder & "DataFile.docx")
    DataContent = DataDoc.Content.Text
    DataDoc.Close SaveChanges:=False

    ' 検索範囲を文書全体に設定
    Set SearchRange = MainDoc.Content

    i = 0
    With SearchRange.Find
        .ClearFormatting
        .Text = "Keyword"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False

        Do While .Execute
            i = i + 1
            
            ' "Keyword" の直後にカーソルを移動し、データを挿入
            SearchRange.Collapse Direction:=wdCollapseEnd
            SearchRange.InsertAfter " " & DataContent
            
            ' 挿入されたテキストの長さ分だけ検索範囲を調整
            SearchRange.Start = SearchRange.End
            SearchRange.End = MainDoc.Content.End
        Loop
    End With

    ' 結合された文書を結果フォルダに保存
    MainDoc.SaveAs2 ResultFolder & "ResultDocument_" & Format(Now, "yyyymmdd_hhnnss") & ".docx"

    ' メイン文書を閉じる
    MainDoc.Close SaveChanges:=False
    
    MsgBox "文書の結合が完了しました。 " & i & "個の 'Keyword' が処理されました。", vbInformation
End Sub


---



Sub DocumentMergeAutomation()
    Dim MainDocFolder As String
    Dim DataFolder As String
    Dim ResultFolder As String
    Dim MainDoc As Document, DataDoc As Document
    Dim SearchRange As Range, OriginalRange As Range
    Dim DataContent As String
    Dim i As Long, OriginalLength As Long

    MainDocFolder = "C:\Users\parky\Documents\MainFolder\\"
    DataFolder = "C:\Users\parky\Documents\DataFolder\"
    ResultFolder = "C:\Users\parky\Documents\ResultFolder\"

    ' メイン文書を開く
    Set MainDoc = Documents.Open(MainDocFolder & "MainDocument.docx")

    ' データファイルを開いて内容を読み込み、すぐに閉じる
    Set DataDoc = Documents.Open(DataFolder & "DataFile.docx")
    DataContent = DataDoc.Content.Text
    DataDoc.Close SaveChanges:=False

    ' 元の文書の長さを記録
    OriginalLength = MainDoc.Content.End - 1

    ' 検索範囲を文書全体に設定
    Set SearchRange = MainDoc.Content
    Set OriginalRange = MainDoc.Range(0, OriginalLength)

    i = 0
    With OriginalRange.Find
        .ClearFormatting
        .Text = "Keyword"
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False

        Do While .Execute
            i = i + 1
            
            ' "Keyword" の直後にカーソルを移動し、データを挿入
            OriginalRange.Collapse Direction:=wdCollapseEnd
            OriginalRange.InsertAfter " " & DataContent
            
            ' 次の検索のために範囲を調整
            OriginalRange.Start = OriginalRange.End
            OriginalRange.End = OriginalLength
        Loop
    End With

    ' 結合された文書を結果フォルダに保存
    MainDoc.SaveAs2 ResultFolder & "ResultDocument_" & Format(Now, "yyyymmdd_hhnnss") & ".docx"

    ' メイン文書を閉じる
    MainDoc.Close SaveChanges:=False
    
    MsgBox "文書の結合が完了しました。 " & i & "個の 'Keyword' が処理されました。", vbInformation
End Sub
